<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns="http://www.springframework.org/schema/beans"
       default-autowire="byName"
       xsi:schemaLocation="http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        ">

    <context:property-placeholder location="classpath*:config.properties" ignore-unresolvable="true"/>
    <util:properties id="settings" location="classpath:config.properties"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.testWhileIdle}"/>
    </bean>

    <!-- redis连接池 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy" depends-on="jedisPoolConfig">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/> <!-- 加载jedisPool配置信息 -->
        <constructor-arg name="host" value="${redis.host}"/><!-- redis主机地址 -->
        <constructor-arg name="port" value="${redis.port}"/> <!-- redis连接端口 -->
        <constructor-arg name="timeout" value="${redis.conn.timeout}"/>
    </bean>


    <bean id="jedis" class="redis.clients.jedis.Jedis">
        <!--        Jedis(final String host, final int port, final int connectionTimeout, final int soTimeout)-->
        <constructor-arg name="host" type="java.lang.String" value="${redis.host}"/>
        <!-- redis password -->
        <constructor-arg name="port" type="int" value="${redis.port}"/>
        <!-- redis连接超时时间 -->
        <constructor-arg name="connectionTimeout" type="int" value="${redis.conn.timeout}"/>
        <!-- redis socket超时时间 -->
        <constructor-arg name="soTimeout" type="int" value="${redis.socket.timeout}"/>
    </bean>

    <bean id="tedis" class="com.tujia.myssm.core.Tedis">
        <constructor-arg name="jedis" ref="jedis"/>
        <constructor-arg name="jedisPool" ref="jedisPool"/>
    </bean>

</beans>